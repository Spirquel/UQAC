import csv
import pandas as pd

Input_Path_ = 'pornhub.com-db/ph-db-with-invalid-date.csv'
#Input_Path_ = pd.read_csv(Path_, delimiter='|', on_bad_lines='warn', header=None, encoding='utf-8')

Error_text_ = 'pornhub.com-db/txt/line.txt'
Output_Path_ = 'pornhub.com-db/ph-db.csv'

# problematic_lines = [
#     61313, 259302, 317157, 357575, 359286, 385157, 406584, 410288, 451567, 460755, 465852,
#     474762, 513157, 609507, 665377, 768123, 1019172, 1070905, 1116993, 1178946, 1183712, 
#     1193495, 1231512, 1281029, 1297320, 1300812, 1389653, 1429006, 1465619, 1492256, 1528375,
#     1592974, 1606336, 1624842, 1681282, 1700819, 1702188, 1702194, 1733644, 1781638, 1956649,
#     1965081, 1968874, 1981020, 1981025, 1981031, 2082556, 2097214, 2115816, 2127641, 2149398,
#     2149410, 2164833, 2168493, 2368517, 2395648, 2487313, 2500375, 2527031, 2537215, 2571850,
#     2589558, 2599349, 2599377, 2599457, 2599463, 2628908, 2645988, 2668049, 2670133, 2694151,
#     2798022, 2852407, 2903583, 2948506, 2956995, 2990468, 3012598, 3050099, 3051719, 3072191,
#     3085365, 3126453, 3148567, 3149139, 3155120, 3168462, 3178096, 3178099, 3178104, 3178109,
#     3178114, 3178116, 3178134, 3178143, 3178146, 3178157, 3178160, 3178173, 3178174, 3178181,
#     3178184, 3178186, 3178187, 3178188, 3178195, 3178198, 3178200, 3178212, 3178214, 3178216,
#     3178218, 3178220, 3178227, 3178229, 3178377, 3178378, 3178381, 3178382, 3178384, 3178387,
#     3178394, 3178402, 3178403, 3183251, 3183269, 3196307, 3218392, 3272016, 3312935, 3313501,
#     3322517, 3322538, 3364060, 3364908, 3413569, 3432208, 3481158, 3503609, 3513545, 3513996,
#     3544630, 3569449, 3571581, 3572105, 3714161, 3720269, 3859042, 3980551, 3996642, 4010014,
#     4020644, 4025509, 4041053, 4045639, 4045698, 4073262, 4073268, 4073272, 4079245, 4095953,
#     4097953, 4098543, 4273855, 4328051, 4416046, 4469671, 4474411, 4515436, 4533006, 4533775,
#     4603178, 4661484, 4677362, 4682848, 4744153, 4841448, 4844649, 4895866, 4922776, 5016348
# ]

problematic_lines = [
    109031, 109032, 109033, 109034, 109035, 109036, 109037, 109038, 109039, 109040, 
    109041, 109042, 109043, 109044, 109045, 109046, 109047, 109048, 109049, 109050, 
    109051, 109052, 109053, 109054, 109055, 109056, 109057, 109058, 109059, 109060, 
    109061, 109062, 109063, 109064, 109065, 109066, 109067, 109068, 109069, 109070, 
    109071, 109072, 109073, 109074, 109075, 109076, 109077, 109078, 109079, 109080, 
    109081, 109082, 109083, 109084, 109085, 109086, 109087, 109088, 109089, 109090, 
    109091, 109092, 109093, 109094, 109095, 109096, 109097, 109098, 109099, 109100, 
    109101, 109102, 109103, 109104, 109105, 109106, 109107, 109108, 109109, 109110, 
    109111, 109112, 109113, 109114, 109115, 109116, 109117, 109118, 109119, 109120, 
    109121, 109122, 109123, 109124, 109125, 109126, 109127, 109128, 109129, 109130, 
    109131, 109132, 109133, 109134, 109135, 109136, 109137, 109138, 109139, 109140, 
    109141, 109142, 109143, 109144, 109145, 109146, 109147, 109148, 109149, 109150, 
    109151, 109152, 109153, 109154, 109155, 109156, 109157, 109158, 109159, 109160, 
    109161, 109162, 109163, 109164, 109165, 109166, 109167, 109168, 109169, 109170, 
    109171, 109172, 109173, 109174, 109175, 109176, 109177, 109178, 109179, 109180, 
    109181, 109182, 109183, 109184, 109185, 109186, 109187, 109188, 109189, 109190, 
    109191, 109192, 109193, 109194, 109195, 109196, 109197, 109198, 109199, 109200, 
    109201, 109202, 109203, 109204, 109205, 109206, 109207, 109208, 109209, 109210, 
    109211, 109212, 109213, 109214, 109215, 109216, 109217, 109218, 109219, 109220, 
    109221, 109222, 109223, 109224, 109225, 109226, 109227, 109228, 109229, 109230, 
    109231, 109232, 109233, 109234, 109235, 109236, 109237, 109238, 109239, 109240, 
    109241, 109242, 109243, 109244, 109245, 109246, 109247, 109248, 109249, 109250, 
    109251, 109252, 109253, 109254, 109255, 109256, 109257, 109258, 109259, 109260, 
    109261, 109262, 109263, 109264, 109265, 109266, 109267, 109268, 109269, 109270, 
    109271, 109272, 109273, 109274, 109275, 109276, 109277, 109278, 109279, 109280, 
    109281, 109282, 109283, 109284, 109285, 109286, 109287, 109288, 109289, 109290, 
    109291, 109292, 109293, 109294, 109295, 109296, 109297, 109298, 109299, 109300, 
    109301, 109302, 109303, 109304, 109305, 109306, 109307, 109308, 109309, 109310, 
    109311, 109312, 109313, 109314, 109315, 109316, 142382, 142383, 142384, 142385, 
    142386, 142387, 142388, 142389, 142390, 142391, 142392, 142393, 142394, 142395, 
    142396, 142397, 142398, 142399, 142400, 142401, 142402, 142403, 142404, 142405, 
    142406, 142407, 142408, 142409, 142410, 142411, 142412, 142413, 142414, 142415, 
    142416, 142417, 142418, 142419, 142420, 142421, 142422, 142423, 142424, 142425, 
    142426, 142427, 142428, 142429, 142430, 142431, 142432, 142433, 142434, 142435, 
    142436, 142437, 142438, 142439, 142440, 142441, 142442, 142443, 142444, 142445, 
    142446, 142447, 142448, 142449, 142450, 142451, 142452, 142453, 142454, 142455, 
    142456, 142457, 142458, 142459, 142460, 142461, 142462, 142463, 142464, 142465, 
    142466, 142467, 142468, 142469, 142470, 142471, 142472, 142473, 142474, 142475, 
    142476, 142477, 142478, 142479, 142480, 142481, 142482, 142483, 142484, 142485, 
    142486, 142487, 142488, 142489, 142490, 142491, 142492, 142493, 142494, 142495, 
    142496, 142497, 142498, 142499, 142500, 142501, 142502, 142503, 142504, 142505, 
    142506, 142507, 142508, 142509, 142510, 142511, 142512, 142513, 142514, 142515, 
    142516, 142517, 142518, 142519, 142520, 142521, 142522, 142523, 142524, 142525, 
    142526, 142527, 142528, 142529, 142530, 142531, 142532, 142533, 142534, 142535, 
    142536, 142537, 142538, 142539, 142540, 142541, 142542, 142543, 142544, 142545, 
    142546, 142547, 142548, 142549, 142550, 142551, 142552, 142553, 142554, 142555, 
    142556, 142557, 142558, 142559, 142560, 142561, 142562, 142563, 142564, 142565, 
    142566, 142567, 142568, 142569, 142570, 142571, 142572, 142573, 142574, 142575, 
    142576, 142577, 142578, 142579, 142580, 142581, 142582, 142583, 142584, 142585, 142586, 142587, 142588, 
    142589, 142590, 142591, 142592, 142593, 142594, 142595, 142596, 142597, 142598, 
    142599, 142600, 142601, 142602, 142603, 142604, 142605, 142606, 142607, 142608, 
    142609, 142610, 142611, 142612, 142613, 142614, 142615, 142616, 142617, 142618, 
    142619, 142620, 142621, 142622, 142623, 142624, 142625, 142626, 142627, 142628, 
    142629, 142630, 142631, 142632, 142633, 142634, 142635, 142636, 142637, 142638, 
    142639, 142640, 142641, 142642, 142643, 142644, 142645, 142646, 142647, 142648, 
    142649, 142650, 142651, 142652, 142653, 142654, 142655, 142656, 142657, 142658, 
    142659, 142660, 142661, 142662, 142663, 142664, 142665, 142666, 142667, 142668, 
    142669, 142670, 142671, 142672, 142673, 142674, 142675, 142676, 142677, 142678, 
    142679, 142680, 142681, 142682, 142683, 142684, 142685, 142686, 142687, 142688, 
    142689, 142690, 142691, 142692, 142693, 142694, 142695, 142696, 142697, 142698, 
    142699, 142700, 142701, 142702, 142703, 142704, 142705, 142706, 142707, 142708, 
    142709, 142710, 142711, 142712, 142713, 142714, 142715, 142716, 142717, 142718, 
    142719, 142720, 142721, 142722, 142723, 142724, 142725, 142726, 142727, 142728, 
    142729, 142730, 142731, 142732, 142733, 142734, 142735, 142736, 142737, 142738, 
    142739, 142740, 142741, 142742, 142743, 142744, 142745, 142746, 142747, 142748, 
    142749, 142750, 142751, 142752, 142753, 142754, 142755, 142756, 142757, 142758, 
    142759, 142760, 142761, 142762, 142763, 142764, 142765, 142766, 142767, 142768, 
    142769, 142770, 142771, 142772, 142773, 142774, 142775, 142776, 142777, 142778, 
    142779, 142780, 142781, 142782, 142783, 142784, 142785, 142786, 142787, 142788, 
    142789, 142790, 142791, 142792, 142793, 142794, 142795, 142796, 142797, 142798, 
    142799, 142800, 142801, 142802, 142803, 142804, 142805, 142806, 142807, 142808, 
    142809, 142810, 142811, 142812, 142813, 142814, 142815, 142816, 142817, 142818, 
    142819, 142820, 142821, 142822, 142823, 142824, 142825, 142826, 142827, 142828, 
    142829, 142830, 142831, 142832, 142833, 142834, 142835, 142836, 142837, 142838, 
    142839, 142840, 142841, 142842, 142843, 142844, 142845, 142846, 142847, 142848, 
    142849, 142850, 142851, 142852, 142853, 142854, 142855, 142856, 142857, 142858, 
    142859, 142860, 142861, 142862, 142863, 142864, 142865, 142866, 142867, 142868, 
    142869, 142870, 142871, 142872, 142873, 142874 ]


with open(Input_Path_, 'r', encoding='utf-8') as csvfile:
    csvreader = csv.reader(csvfile, delimiter='|')
    tab = []
    i = 1
    j = 0
    for row in csvreader:
        if j < len(problematic_lines) and i == problematic_lines[j]:
            j += 1
            print("ligne supp actuelle : {}".format(i))
        else:
            tab.append(row)
        i += 1

with open(Output_Path_, 'w', newline='', encoding='utf-8') as output_file:
    csvwriter = csv.writer(output_file, delimiter='|')
    csvwriter.writerows(tab)

print("Traitement et écriture dans le nouveau fichier CSV terminés.")